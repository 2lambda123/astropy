.. _whatsnew-5.1:

**************************
What's New in Astropy 5.1?
**************************

Overview
========

Astropy 5.1 is a major release that adds significant new functionality since
the 5.0 LTS release.

In particular, this release includes:

* :ref:`whatsnew-5.1-cosmology`
* :ref:`whatsnew-doppler-redshift-eq`
* :ref:`whatsnew-io-ascii-converters`

.. _whatsnew-5.1-cosmology:

Updates to ``Cosmology``
========================

:class:`~astropy.cosmology.Cosmology` is now an abstract base class,
and subclasses must override the abstract property ``is_flat``.
For :class:`~astropy.cosmology.FLRW`, ``is_flat`` checks that ``Ok0=0`` and
``Otot0=1``.

Astropy v5.0 introduced Cosmological equivalency -- with method
:meth:`~astropy.cosmology.Cosmology.is_equivalent` -- where two cosmologies may
be equivalent even if not of the same class. For example, an instance of
:class:`~astropy.cosmology.LambdaCDM` might have :math:`\Omega_0=1` and
:math:`\Omega_k=0` and therefore be flat, like ``FlatLambdaCDM``.
Now the keyword argument ``format`` is added to extend the notion of
equivalence to any Python object that can be converted to a Cosmology.

    >>> from astropy.cosmology import Planck18
    >>> tbl = Planck18.to_format("astropy.table")
    >>> Planck18.is_equivalent(tbl, format=True)
    True

The list of valid formats, e.g. the Table in this example, may be
checked with ``Cosmology.from_format.list_formats()``


.. _whatsnew-doppler-redshift-eq:

``doppler_redshift`` equivalency
================================

New :func:`astropy.units.equivalencies.doppler_redshift` is added to
provide conversion between Doppler redshift and radial velocity.

.. _whatsnew-io-ascii-converters:

Specifying data types when reading ASCII tables
===============================================

The syntax for specifying the data type of columns when reading a table using
:func:`astropy.io.ascii.read` has been simplified considerably. For instance,
to force every column in a table to be read as a ``float`` you can now do:

    >>> from astropy.table import Table
    >>> t = Table.read('table.dat', format='ascii', converters={'*': float})  # doctest: +SKIP

Previously, doing the same data type specification required using the
:func:`~astropy.io.ascii.convert_numpy` function and providing the ``dict``
value as a ``list`` even for only one element::

    >>> from astropy.io.ascii import convert_numpy
    >>> t = Table.read('table.dat', format='ascii',
    ...                converters={'*': [convert_numpy(float)]})  # doctest: +SKIP

Note that the previous syntax is still supported for backwards compatibility
and there is no intent to remove this. See :ref:`io-ascii-read-converters` for
details.

Full change log
===============

To see a detailed list of all changes in version v5.1, including changes in
API, please see the :ref:`changelog`.

Renamed/removed functionality
=============================
